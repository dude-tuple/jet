"""initial

Revision ID: 90466fc3052a
Revises: 
Create Date: 2025-04-16 16:24:38.883664

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '90466fc3052a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('label',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('node_id', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('color', sa.String(length=20), nullable=False),
    sa.Column('default', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('login', sa.String(length=100), nullable=False),
    sa.Column('node_id', sa.String(length=100), nullable=False),
    sa.Column('avatar_url', sa.Text(), nullable=True),
    sa.Column('gravatar_id', sa.String(length=100), nullable=True),
    sa.Column('type', sa.String(length=20), nullable=False),
    sa.Column('site_admin', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('login')
    )
    op.create_table('issue',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('node_id', sa.String(length=100), nullable=False),
    sa.Column('number', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=500), nullable=False),
    sa.Column('body', sa.Text(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('state', sa.String(length=20), nullable=False),
    sa.Column('locked', sa.Boolean(), nullable=True),
    sa.Column('comments', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('closed_at', sa.DateTime(), nullable=True),
    sa.Column('author_association', sa.String(length=100), nullable=True),
    sa.Column('active_lock_reason', sa.String(length=255), nullable=True),
    sa.Column('timeline_url', sa.Text(), nullable=False),
    sa.Column('state_reason', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('repository',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('node_id', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('full_name', sa.String(length=200), nullable=False),
    sa.Column('private', sa.Boolean(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('html_url', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('fork', sa.Boolean(), nullable=True),
    sa.Column('homepage', sa.Text(), nullable=True),
    sa.Column('language', sa.String(length=50), nullable=True),
    sa.Column('forks_count', sa.Integer(), nullable=True),
    sa.Column('stargazers_count', sa.Integer(), nullable=True),
    sa.Column('watchers_count', sa.Integer(), nullable=True),
    sa.Column('size', sa.Integer(), nullable=True),
    sa.Column('default_branch', sa.String(length=100), nullable=True),
    sa.Column('open_issues_count', sa.Integer(), nullable=True),
    sa.Column('topics', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('has_issues', sa.Boolean(), nullable=True),
    sa.Column('has_projects', sa.Boolean(), nullable=True),
    sa.Column('has_wiki', sa.Boolean(), nullable=True),
    sa.Column('has_pages', sa.Boolean(), nullable=True),
    sa.Column('has_discussions', sa.Boolean(), nullable=True),
    sa.Column('archived', sa.Boolean(), nullable=True),
    sa.Column('disabled', sa.Boolean(), nullable=True),
    sa.Column('visibility', sa.String(length=20), nullable=True),
    sa.Column('pushed_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('allow_rebase_merge', sa.Boolean(), nullable=True),
    sa.Column('squash_merge_allowed', sa.Boolean(), nullable=True),
    sa.Column('allow_auto_merge', sa.Boolean(), nullable=True),
    sa.Column('delete_branch_on_merge', sa.Boolean(), nullable=True),
    sa.Column('allow_update_branch', sa.Boolean(), nullable=True),
    sa.Column('use_squash_pr_title_as_default', sa.Boolean(), nullable=True),
    sa.Column('is_template', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('full_name')
    )
    op.create_table('issue_assignee',
    sa.Column('issue_id', sa.Integer(), nullable=True),
    sa.Column('assignee_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['assignee_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['issue_id'], ['issue.id'], )
    )
    op.create_table('issue_label',
    sa.Column('issue_id', sa.Integer(), nullable=False),
    sa.Column('label_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['issue_id'], ['issue.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['label_id'], ['label.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('issue_id', 'label_id')
    )
    op.create_table('reactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('issue_id', sa.Integer(), nullable=False),
    sa.Column('total_count', sa.Integer(), nullable=True),
    sa.Column('plus_one', sa.Integer(), nullable=True),
    sa.Column('minus_one', sa.Integer(), nullable=True),
    sa.Column('laugh', sa.Integer(), nullable=True),
    sa.Column('confused', sa.Integer(), nullable=True),
    sa.Column('heart', sa.Integer(), nullable=True),
    sa.Column('rocket', sa.Integer(), nullable=True),
    sa.Column('eyes', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['issue_id'], ['issue.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('issue_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('reactions')
    op.drop_table('issue_label')
    op.drop_table('issue_assignee')
    op.drop_table('repository')
    op.drop_table('issue')
    op.drop_table('user')
    op.drop_table('label')
    # ### end Alembic commands ###
